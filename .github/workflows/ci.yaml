name: For each PR
on:
  pull_request:
    paths-ignore:
      - kernel/**
jobs:
  validation:
    runs-on: ubuntu-20.04
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Build and push bootkit
        uses: docker/build-push-action@v3
        with:
          context: ./bootkit/
          platforms: linux/amd64,linux/arm64
          push: true
          tags: localhost:5000/tinkerbell/hook-bootkit:latest

      - name: Build and push tink-docker
        uses: docker/build-push-action@v3
        with:
          context: ./tink-docker/
          platforms: linux/amd64,linux/arm64
          push: true
          tags: localhost:5000/tinkerbell/hook-docker:latest

      - uses: cachix/install-nix-action@v17
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Fetch Nix Deps
        run: nix-shell --command true

      - name: Run formatters and linters
        run: nix-shell --run .github/workflows/formatters-and-linters.sh

      # Replace hook-{bootkit,docker} but not hook-kernel
      - run: sed -E -i 's,quay.io/tinkerbell/hook-(bootkit|docker),localhost:5000/tinkerbell/hook-\1,g' hook.in.yaml

      - name: Build
        run: ./hack/ci-build.sh

      # TODO: add artifacts for the built images
      - uses: actions/upload-artifact@v3
        with:
          name: hook-${{ github.sha }}.tar.gz
          path: hook-${{ github.sha }}.tar.gz
